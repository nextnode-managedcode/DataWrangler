module DataWrangle

open Deedle

let wrangleClientData (dataFilePath : string) = 
    //let sourceFrame = Deedle.Frame.ReadCsv("./Data/Clients_20240503.csv")
    let sourceFrame = Deedle.Frame.ReadCsv(dataFilePath)
    let analystColumn : Series<int, string> = sourceFrame.GetColumn("Analyst")
    let streetColumn  : Series<int, string> = sourceFrame.GetColumn("Billing Address")
    let provinceColumn : Series<int, string> = sourceFrame.GetColumn("Billing State")
    let postOfficeBoxColumn : Series<int, string> = sourceFrame.GetColumn("Billing PO Box")
    let postalCodeColumn : Series<int, string> = sourceFrame.GetColumn("Billing Postal Code")
    let cityColumn : Series<int, string> = sourceFrame.GetColumn("Billing City")
    let clientNameColumn : Series<int, string> = sourceFrame.GetColumn("Client Name")
    let fiscalYearEndMonthColumn : Series<int, string> = sourceFrame.GetColumn("FYE Month")
    let fiscalYearEndDayColumn : Series<int, string> = sourceFrame.GetColumn("FYE Day")
    let businessNumberColumn : Series<int, string> = sourceFrame.GetColumn("Federal Business Number")
    let signingOfficerColumn : Series<int, string> = sourceFrame.GetColumn("Signing Officer")
    let emailColumn : Series<int, string> = sourceFrame.GetColumn("Primary Email")
    let phoneColumn : Series<int, string> = sourceFrame.GetColumn("Primary Phone")
    let emptyColumn : Series<int, string> =  series [1, ""] 

    let destinationFrame : Deedle.Frame<int, string> = Deedle.FrameBuilder.Columns<int, string>().Frame 
    destinationFrame.AddColumn("Analyst", analystColumn)
    destinationFrame.AddColumn("Lead Source", emptyColumn)
    destinationFrame.AddColumn("Closer", emptyColumn)
    destinationFrame.AddColumn("Referred By", emptyColumn)
    destinationFrame.AddColumn("Rainmaker", emptyColumn)
    destinationFrame.AddColumn("Referral %", emptyColumn)
    destinationFrame.AddColumn("Business Developer", emptyColumn)
    destinationFrame.AddColumn("Referral Notes", emptyColumn)
    destinationFrame.AddColumn("Group Rate Code", emptyColumn)
    destinationFrame.AddColumn("Created Time", emptyColumn)
    destinationFrame.AddColumn("Client Number", emptyColumn)
    destinationFrame.AddColumn("Is Converted From Lead", emptyColumn)
    destinationFrame.AddColumn("Modified Time", emptyColumn)
    destinationFrame.AddColumn("Invoice Address", streetColumn)
    destinationFrame.AddColumn("Invoice State", provinceColumn)
    destinationFrame.AddColumn("Invoice P.O. Box", postOfficeBoxColumn)
    destinationFrame.AddColumn("Invoice Postal Code", postalCodeColumn)
    destinationFrame.AddColumn("Invoice City", cityColumn)
    destinationFrame.AddColumn("Client Type", emptyColumn)
    destinationFrame.AddColumn("Active Status", emptyColumn)
    destinationFrame.AddColumn("Client Name", clientNameColumn)
    destinationFrame.AddColumn("Area of Specialty", emptyColumn)
    destinationFrame.AddColumn("Legal Business Name (if different)", emptyColumn)
    destinationFrame.AddColumn("Eligible Industries", emptyColumn)
    destinationFrame.AddColumn("FYE Month", fiscalYearEndMonthColumn)
    destinationFrame.AddColumn("Industry Specialty", emptyColumn)
    destinationFrame.AddColumn("FYE Day", fiscalYearEndDayColumn)
    destinationFrame.AddColumn("Medical Specialty", emptyColumn)
    destinationFrame.AddColumn("Filing Deadline Date (6/18 month)", emptyColumn)
    destinationFrame.AddColumn("RC59 Expiry Date", emptyColumn)
    destinationFrame.AddColumn("Federal Business Number", businessNumberColumn)
    destinationFrame.AddColumn("RC59 Level Access", emptyColumn)
    destinationFrame.AddColumn("Other Business Number", emptyColumn)
    destinationFrame.AddColumn("Email Opt Out", emptyColumn)
    destinationFrame.AddColumn("Last Modified By", emptyColumn)
    destinationFrame.AddColumn("Source", emptyColumn)
    destinationFrame.AddColumn("Primary User Name", emptyColumn)
    destinationFrame.AddColumn("Primary User Password", emptyColumn)
    destinationFrame.AddColumn("Secondary User Name", emptyColumn)
    destinationFrame.AddColumn("Secondary User Password", emptyColumn)
    destinationFrame.AddColumn("SRED Proof Training Date", emptyColumn)
    destinationFrame.AddColumn("SRED Proof Status", emptyColumn)
    destinationFrame.AddColumn("SRED Proof Manual Sent", emptyColumn)
    destinationFrame.AddColumn("SREDProof Notes", emptyColumn)
    destinationFrame.AddColumn("Evidence Collection Preference", emptyColumn)
    destinationFrame.AddColumn("Evidence Management Alias", emptyColumn)
    destinationFrame.AddColumn("Evidence Management Year", emptyColumn)
    destinationFrame.AddColumn("Soft Fax Sent", emptyColumn)
    destinationFrame.AddColumn("Article 1 Link", emptyColumn)
    destinationFrame.AddColumn("Campaign Package Mailed", emptyColumn)
    destinationFrame.AddColumn("Article 2 Link", emptyColumn)
    destinationFrame.AddColumn("2nd Campaign Package Mailed", emptyColumn)
    destinationFrame.AddColumn("Article 3 Link", emptyColumn)
    destinationFrame.AddColumn("3rd Campaign Package Mailed", emptyColumn)
    destinationFrame.AddColumn("CPSO Link", emptyColumn)
    destinationFrame.AddColumn("4th Campaign Package Mailed", emptyColumn)
    destinationFrame.AddColumn("Notes", emptyColumn)
    destinationFrame.AddColumn("5th Campaign Package Mailed", emptyColumn)
    destinationFrame.AddColumn("Signing Officer", signingOfficerColumn)
    destinationFrame.AddColumn("Billing Contact", emptyColumn)
    destinationFrame.AddColumn("Primary Email", emailColumn)
    destinationFrame.AddColumn("Secondary Email", emptyColumn)
    destinationFrame.AddColumn("Primary Phone", phoneColumn)
    destinationFrame.AddColumn("Secondary Phone",  emptyColumn)
    destinationFrame.AddColumn("Website", emptyColumn)    
    destinationFrame.SaveCsv("./Data/Client.csv", separator=',')

    printfn "Completed client data wrangling"
    0

let wrangleClaimData  (dataFilePath : string) = 
    //let sourceFrame = Deedle.Frame.ReadCsv("./Data/Claims_20240503.csv")



    let sourceFrame = Deedle.Frame.ReadCsv(dataFilePath)
    let claimNumberColumn : Series<int, string> = sourceFrame.GetColumn("Claim Number")
    let claimNameColumn : Series<int, string> = sourceFrame.GetColumn("Claim Name")
    let fiscalYearColumn : Series<int, string> = sourceFrame.GetColumn("Fiscal Year Covered Inactive") 
    let fiscalYearEndMonthColumn : Series<int, string> = sourceFrame.GetColumn("FYE Month Inactive")
    let fiscalYearEndDayColumn : Series<int, string> = sourceFrame.GetColumn("FYE Day Inactive")
    let claimTypeColumn : Series<int, string> = sourceFrame.GetColumn("ClaimType")
    let claimStatusColumn : Series<int, string> = sourceFrame.GetColumn("BOS Phase")
    let departmentManagerColumn : Series<int, string> = sourceFrame.GetColumn("SR&ED Admin")
    let taxationCentreColumn : Series<int, string> = sourceFrame.GetColumn("Taxation Centre")
    let analystColumn : Series<int, string> = sourceFrame.GetColumn("Analyst")
    let accountantColumn : Series<int, string> = sourceFrame.GetColumn("Accountant")
    let relatedToColumn : Series<int, string> = sourceFrame.GetColumn("Related To")
    let analyst2Column : Series<int, string> = sourceFrame.GetColumnAt(63)
    let emptyColumn : Series<int, string> = series [1, ""] 

    let destinationFrame : Deedle.Frame<int, string> = Deedle.FrameBuilder.Columns<int, string>().Frame 
    destinationFrame.AddColumn("Total Bond Fees", claimNumberColumn)
    destinationFrame.AddColumn("Invoice Number", emptyColumn)
    destinationFrame.AddColumn("Retainer Invoice Number", emptyColumn)
    destinationFrame.AddColumn("Invoice Issued", emptyColumn)
    destinationFrame.AddColumn("Retainer Payment Amount", emptyColumn)
    destinationFrame.AddColumn("Invoice Paid", emptyColumn)
    destinationFrame.AddColumn("Retainer Invoice Issued", emptyColumn)
    destinationFrame.AddColumn("Retainer Invoice Paid", emptyColumn)
    destinationFrame.AddColumn("Tax Court Appeal #", emptyColumn)
    destinationFrame.AddColumn("Legal Partner", emptyColumn)
    destinationFrame.AddColumn("Tax Court Appeal Date", emptyColumn)
    destinationFrame.AddColumn("Statement of Claim Submitted", emptyColumn)
    destinationFrame.AddColumn("Tax Court Location", emptyColumn)
    destinationFrame.AddColumn("OlsAnalyst", emptyColumn)
    destinationFrame.AddColumn("Financial Auditor", emptyColumn)
    destinationFrame.AddColumn("Accountant", accountantColumn)
    destinationFrame.AddColumn("Technical Auditor", emptyColumn)
    destinationFrame.AddColumn("Legal_Partner", emptyColumn)
    destinationFrame.AddColumn("BOS Phase", claimStatusColumn)
    destinationFrame.AddColumn("Technical Report", emptyColumn)
    destinationFrame.AddColumn("CRA Target Completion Date", emptyColumn)
    destinationFrame.AddColumn("Cost Sched", emptyColumn)
    destinationFrame.AddColumn("BOS Phase Comments", emptyColumn)
    destinationFrame.AddColumn("Tax File Status", emptyColumn)
    destinationFrame.AddColumn("Eligibility Report", emptyColumn)
    destinationFrame.AddColumn("I believe that there are eligible expenses because", emptyColumn)
    destinationFrame.AddColumn("Claim is eligible / ineligible because",  emptyColumn)
    destinationFrame.AddColumn("(SR) What is the scientific uncertainty?", emptyColumn)
    destinationFrame.AddColumn("(ED) What are the technical obstacles?", emptyColumn)
    destinationFrame.AddColumn("(SR) Is this work available in the public domain?", emptyColumn)
    destinationFrame.AddColumn("(ED) Why will standard practice not work?", emptyColumn)
    destinationFrame.AddColumn("(SR) There are advancements in medicine because", emptyColumn)
    destinationFrame.AddColumn("(ED) I believe there is tech. advancement because", emptyColumn)
    destinationFrame.AddColumn("Claim Name", claimNameColumn)
    destinationFrame.AddColumn("Contract", emptyColumn)
    destinationFrame.AddColumn("6 Month Deadline", emptyColumn)
    destinationFrame.AddColumn("Related To", relatedToColumn)
    destinationFrame.AddColumn("18 Month Deadline", emptyColumn)
    destinationFrame.AddColumn("FYE", emptyColumn)
    destinationFrame.AddColumn("Claim Value", emptyColumn)
    destinationFrame.AddColumn("FYE Month", emptyColumn)
    destinationFrame.AddColumn("Bond Rate (Blended Claim Rate)", emptyColumn)
    destinationFrame.AddColumn("FYE  Day", emptyColumn)
    destinationFrame.AddColumn("Tax Software Used", emptyColumn)
    destinationFrame.AddColumn("Fiscal Year Covered", emptyColumn)
    destinationFrame.AddColumn("Source", emptyColumn)
    destinationFrame.AddColumn("Is Converted From Opportunity", emptyColumn)
    destinationFrame.AddColumn("Fiscal Year Covered Inactive", fiscalYearColumn)
    destinationFrame.AddColumn("FYE Day Inactive", fiscalYearEndDayColumn)
    destinationFrame.AddColumn("FYE Month Inactive", fiscalYearEndMonthColumn)
    destinationFrame.AddColumn("FTCAS Date", emptyColumn)
    destinationFrame.AddColumn("CRA Case File Number", emptyColumn)
    destinationFrame.AddColumn("Requires Financial Audit", emptyColumn)
    destinationFrame.AddColumn("Requires Technical Audit", emptyColumn)
    destinationFrame.AddColumn("Financial_Auditor", emptyColumn)
    destinationFrame.AddColumn("Technical_Auditor", emptyColumn)
    destinationFrame.AddColumn("Financial Audit Date", emptyColumn)
    destinationFrame.AddColumn("Technical Audit Date", emptyColumn)
    destinationFrame.AddColumn("CRA Audit / FTCAS Letter Received", emptyColumn)
    destinationFrame.AddColumn("Post-Audit RFI Due", emptyColumn)
    destinationFrame.AddColumn("Pre-Audit Package Due", emptyColumn)
    destinationFrame.AddColumn("Financial_Auditor2", emptyColumn)
    destinationFrame.AddColumn("Technical_Auditor2", emptyColumn)
    destinationFrame.AddColumn("Audit Rebuttal Due", emptyColumn)
    destinationFrame.AddColumn("Analyst2", analyst2Column)
    destinationFrame.AddColumn("Group Rate Code", emptyColumn)
    destinationFrame.AddColumn("Dept. Co.", emptyColumn)
    destinationFrame.AddColumn("Lead Source", emptyColumn)
    destinationFrame.AddColumn("V.P. Operations", emptyColumn)
    destinationFrame.AddColumn("Referred By", emptyColumn)
    destinationFrame.AddColumn("Closer", emptyColumn)
    destinationFrame.AddColumn("Referral %", emptyColumn)
    destinationFrame.AddColumn("Rainmaker", emptyColumn)
    destinationFrame.AddColumn("Referral Payment Choice", emptyColumn)
    destinationFrame.AddColumn("Business Developer", emptyColumn)
    destinationFrame.AddColumn("Referral Paid to Partner", emptyColumn)
    destinationFrame.AddColumn("Audit Manager", emptyColumn)
    destinationFrame.AddColumn("Marketing", emptyColumn)
    destinationFrame.AddColumn("SR&ED Admin", departmentManagerColumn)
    destinationFrame.AddColumn("Exec. Asst.", emptyColumn)
    destinationFrame.AddColumn("SME", emptyColumn)
    destinationFrame.AddColumn("Rate % 1", emptyColumn)
    destinationFrame.AddColumn("Rate Tier 0", emptyColumn)
    destinationFrame.AddColumn("Rate % 2", emptyColumn)
    destinationFrame.AddColumn("Rate Tier 1", emptyColumn)
    destinationFrame.AddColumn("Rate % 3", emptyColumn)
    destinationFrame.AddColumn("Rate Tier 2", emptyColumn)
    destinationFrame.AddColumn("Rate % Base", emptyColumn)
    destinationFrame.AddColumn("Last Modified By", emptyColumn)
    destinationFrame.AddColumn("Rate Tier Base", emptyColumn)
    destinationFrame.AddColumn("Rate % Audit", emptyColumn)
    destinationFrame.AddColumn("Rate % Tech Project Audit", emptyColumn)
    destinationFrame.AddColumn("Created Time", emptyColumn)
    destinationFrame.AddColumn("Modified Time", emptyColumn)
    destinationFrame.AddColumn("Claim Number", claimNumberColumn)
    destinationFrame.AddColumn("SubCountAnalyst", emptyColumn)
    destinationFrame.AddColumn("Reporting Submission Date", emptyColumn)
    destinationFrame.AddColumn("ComCountAnalyst", emptyColumn)
    destinationFrame.AddColumn("AppCountAnalyst", emptyColumn)
    destinationFrame.AddColumn("GovtOrAcct", emptyColumn)
    destinationFrame.AddColumn("Document Phase Holder", emptyColumn)
    destinationFrame.AddColumn("Taxation Centre Address", taxationCentreColumn)
    destinationFrame.AddColumn("Audit Rate for Bond Rate", emptyColumn)
    destinationFrame.AddColumn("reporting analyst full name", emptyColumn)
    destinationFrame.AddColumn("ClaimSubmittedTotal", emptyColumn)
    destinationFrame.AddColumn("ClaimApprovedTotal", emptyColumn)
    destinationFrame.AddColumn("Reporting ITC", emptyColumn)
    destinationFrame.AddColumn("Reporting OBRITC", emptyColumn)
    destinationFrame.AddColumn("Reporting OITC", emptyColumn)
    destinationFrame.AddColumn("Reporting Other Provincial", emptyColumn)
    destinationFrame.AddColumn("Reporting ORDTC", emptyColumn)
    destinationFrame.AddColumn("Reporting Other", emptyColumn)
    destinationFrame.AddColumn("Description", emptyColumn)
    destinationFrame.AddColumn("90 Day Deadline Date", emptyColumn)
    destinationFrame.AddColumn("Objection Delivery Date", emptyColumn)
    destinationFrame.AddColumn("Proceeding with Objection", emptyColumn)
    destinationFrame.AddColumn("Objection Delivery Method", emptyColumn)
    destinationFrame.AddColumn("CRA Case Number", emptyColumn)
    destinationFrame.AddColumn("Objection Tracking Number", emptyColumn)
    destinationFrame.AddColumn("Appeals Officer", emptyColumn)
    destinationFrame.AddColumn("Confirmation Date (CRA Acknowledgement)", emptyColumn)
    destinationFrame.AddColumn("Appeals Division", emptyColumn)
    destinationFrame.AddColumn("365 Deadline Date (from 90 Day)", emptyColumn)
    destinationFrame.AddColumn("Administrative Review Form Sent", emptyColumn)
    destinationFrame.AddColumn("Extension Requested", emptyColumn)
    destinationFrame.AddColumn("Escalation to Manager / Director Method", emptyColumn)
    destinationFrame.AddColumn("Date Extension Sent", emptyColumn)
    destinationFrame.AddColumn("Escalation Notes", emptyColumn)
    destinationFrame.AddColumn("Risk Level", emptyColumn)
    destinationFrame.AddColumn("Taxation Centre", emptyColumn)
    destinationFrame.AddColumn("Dummy1", emptyColumn)
    destinationFrame.AddColumn("ClaimType", claimTypeColumn)
    destinationFrame.AddColumn("Regional Tax Office", emptyColumn)
    destinationFrame.AddColumn("Refund Category", emptyColumn)
    destinationFrame.AddColumn("Previous Year Taxable Income", emptyColumn)
    destinationFrame.AddColumn("Tax Return Submitted Date", emptyColumn)
    destinationFrame.AddColumn("ITC Total", emptyColumn)
    destinationFrame.AddColumn("Labour Specified", emptyColumn)
    destinationFrame.AddColumn("ITC Balance", emptyColumn)
    destinationFrame.AddColumn("Labour Non-Specified", emptyColumn)
    destinationFrame.AddColumn("ITC Refundable", emptyColumn)
    destinationFrame.AddColumn("Overhead", emptyColumn)
    destinationFrame.AddColumn("ITC Non-Refundable", emptyColumn)
    destinationFrame.AddColumn("Proxy", emptyColumn)
    destinationFrame.AddColumn("OITC", emptyColumn)
    destinationFrame.AddColumn("Materials", emptyColumn)
    destinationFrame.AddColumn("ORDTC Elected", emptyColumn)
    destinationFrame.AddColumn("Subcontracts", emptyColumn)
    destinationFrame.AddColumn("OBRITC", emptyColumn)
    destinationFrame.AddColumn("Third-Party Payment", emptyColumn)
    destinationFrame.AddColumn("Other Province Tax Credit", emptyColumn)
    destinationFrame.AddColumn("IRAP or other assistance", emptyColumn)
    destinationFrame.AddColumn("Total Eligible Expenditures", emptyColumn)
    destinationFrame.AddColumn("Accepted as Filed", emptyColumn)
    destinationFrame.AddColumn("Refund Release Date", emptyColumn)
    destinationFrame.AddColumn("Date of Notice of Re-Assessment", emptyColumn)
    destinationFrame.AddColumn("CRA Refund Method", emptyColumn)
    destinationFrame.AddColumn("App. ITC Total", emptyColumn)
    destinationFrame.AddColumn("Reason for Hold", emptyColumn)
    destinationFrame.AddColumn("App. ITC Refundable", emptyColumn)
    destinationFrame.AddColumn("App. Labour Specified", emptyColumn)
    destinationFrame.AddColumn("App. ITC Non-Refundable", emptyColumn)
    destinationFrame.AddColumn("App. Labour Non-Specified", emptyColumn)
    destinationFrame.AddColumn("App. OITC", emptyColumn)
    destinationFrame.AddColumn("App. Proxy", emptyColumn)
    destinationFrame.AddColumn("App. OBRITC", emptyColumn)
    destinationFrame.AddColumn("App. Materials", emptyColumn)
    destinationFrame.AddColumn("App. ORDTC", emptyColumn)
    destinationFrame.AddColumn("App. Subcontracts", emptyColumn)
    destinationFrame.AddColumn("App. Other Province Tax Credit", emptyColumn)
    destinationFrame.AddColumn("App. Third-Party Payment", emptyColumn)
    destinationFrame.AddColumn("App. Other", emptyColumn)
    destinationFrame.AddColumn("App. Overhead", emptyColumn)
    destinationFrame.AddColumn("App. Total Eligible Expenditures", emptyColumn)
    destinationFrame.AddColumn("Date Submitted to Government", emptyColumn)
    destinationFrame.AddColumn("Accountant3", emptyColumn)
    destinationFrame.AddColumn("Govt. Delivery Method", emptyColumn)
    destinationFrame.AddColumn("Date Submitted to Accountant", emptyColumn)
    destinationFrame.AddColumn("Govt. Tracking Number", emptyColumn)
    destinationFrame.AddColumn("Date Submitted to Client", emptyColumn)
    destinationFrame.AddColumn("CRA acknowledged receipt", emptyColumn)

    destinationFrame.SaveCsv("./Data/Claim.csv", separator=',')

    printfn  "Completed data wrangling"
    0